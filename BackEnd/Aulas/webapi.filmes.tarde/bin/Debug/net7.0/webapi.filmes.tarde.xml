<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.filmes.tarde</name>
    </assembly>
    <members>
        <member name="T:webapi.filmes.tarde.Controllers.FilmeController">
            <summary>
            Rotas e nova classe
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Controllers.FilmeController._filmeRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.#ctor">
            <summary>
            Construtor
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.Get">
            <summary>
            Endpoint que acessa o método ListarTodos
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.Post(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Endpoint que acessa o método Cadastrar
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.GetById(System.Int32)">
            <summary>
            Endpoint que acessa o método BuscarPorId
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.Delete(System.Int32)">
            <summary>
            Endpoint que acessa o método Deletar
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.PutByBody(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Endpoint que acessa o método AtualizarIdCorpo
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.PutByUrl(webapi.filmes.tarde.Domains.FilmeDomain,System.Int32)">
            <summary>
            Endpoint que acessa o método AtualizarIdUrl
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Controllers.GeneroController">
            <summary>
            Define que a rota de uma requisição será no seguinte formato:
            Domínio/api/nomeControle
            exemplo: http://localhost.7242/api/Genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Controllers.GeneroController._generoRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.#ctor">
            <summary>
            Instância do objeto _generoRepository para que haja referência aos métodos do repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Get">
            <summary>
            Endpoint que acessa o método de listar os gêneros
            </summary>
            <returns> Lista de gêneros e um status code </returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Post(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que acessa o método de cadastrar um gênero
            </summary>
            <param name="novoGenero"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Delete(System.Int32)">
            <summary>
            Endpoint que acessa o método de deletar um gênero
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.GetById(System.Int32)">
            <summary>
            Endpoint que acessa o método buscar por id de um gênero
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.PutByBody(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que acessa o método atualizar por corpo
            </summary>
            <param name="genero"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.PutByUrl(webapi.filmes.tarde.Domains.GeneroDomain,System.Int32)">
            <summary>
            Endpoint que acessa o método atualizar por url
            </summary>
            <param name="genero"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:webapi.filmes.tarde.Controllers.UsuarioController">
            <summary>
            Define que a rota de uma requisição será no seguinte formato:
            Domínio/api/nomeControle
            exemplo: http://localhost.7242/api/Usuario
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Controllers.UsuarioController._usuarioRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.UsuarioController.#ctor">
            <summary>
            Construtor que instancia o objeto UsuarioRepository para que haja referência aos métodos do repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.UsuarioController.Login(System.String,System.String)">
            <summary>
            Loga um usuário pelo seu email e senha
            </summary>
            <param name="email"> Email a ser inserido </param>
            <param name="senha"> Senha a ser inserida </param>
            <returns> Um usuário </returns>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.FilmeDomain">
            <summary>
            Classe que representa a entidade(tabela) Filme
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.FilmeDomain.IdFilme">
            <summary>
            Id do filme
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.FilmeDomain.Titulo">
            <summary>
            Titulo do filme
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.FilmeDomain.IdGenero">
            <summary>
            Id do genero do filme
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.FilmeDomain.Genero">
            <summary>
            Referência para a classe GêneroDomain
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.GeneroDomain">
            <summary>
            Classe que representa a entidade(tabela) Genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.GeneroDomain.IdGenero">
            <summary>
            Id do objeto Gênero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.GeneroDomain.Nome">
            <summary>
            Nome do objeto Gênero
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.UsuarioDomain">
            <summary>
            Classe que representa a entidade(tabela) Usuario
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.UsuarioDomain.IdUsuario">
            <summary>
            Id de um usuário já cadastrado
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.UsuarioDomain.Email">
            <summary>
            Email do usuário
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.UsuarioDomain.Senha">
            <summary>
            Senha do usuário
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.UsuarioDomain.Permissao">
            <summary>
            Permissão do usuário
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Interfaces.IFilmeRepository">
            <summary>
            Interface responsável pelo repositório FilmeRepository
            Define os métodos que serão implementados pelo repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastra um filme
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.ListarTodos">
            <summary>
            Lista todos os filmes
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um filme através do seu id
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualiza um filme pelo corpo
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualiza um filme pela url
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Deletar(System.Int32)">
            <summary>
            Deleta um filme
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Interfaces.IGeneroRepository">
            <summary>
            Interface responsável pelo reposiório GeneroRepository
            Define os métodos que serão implementados pelo repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo gênero
            </summary>
            <param name="novoGenero"> Objeto que será cadastrado </param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.ListarTodos">
            <summary>
            Retornar todos os gêneros cadatrados
            </summary>
            <returns> Uma lista de gêneros </returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um objeto através do seu Id
            </summary>
            <param name="id"> Id do objeto que será buscado </param>
            <returns> Objeto que foi buscado </returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um gênero existente passando o Id pelo corpo da requisição
            </summary>
            <param name="genero"> Objeto com as novas informações </param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um gênero existente passando o Id pela URL da requisição
            </summary>
            <param name="id"> Id do objeto a ser atualizado </param>
            <param name="genero"> Objeto com as novas informações </param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Deletar(System.Int32)">
            <summary>
            Deletar um gênero existente
            </summary>
            <param name="id"> Id do objeto a ser deletado </param>
        </member>
        <member name="T:webapi.filmes.tarde.Interfaces.IUsuarioRepository">
            <summary>
            Interface responsável pelo repositório UsuarioRepository
            Define os métodos que serão implementados pelo repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IUsuarioRepository.Login(System.String,System.String)">
            <summary>
            Método que busca um usuário por email e senha
            </summary>
            <param name="email"> Email do usuário </param>
            <param name="senha"> Senha do usuário </param>
            <returns> Objeto que foi buscado </returns>
        </member>
        <member name="T:webapi.filmes.tarde.Repositories.FilmeRepository">
            <summary>
            Classe responsável pelo repositório dos filmes
            </summary>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.FilmeRepository.StringConexao">
            <summary>
            String de conexão com o banco de dados que recebe os seguintes parâmetros:
            Data Source: Nome do servidor do banco
            Initial Catalog: Nome do banco de dados
            Autenticação
                - Windows: Integrated Security = True
                - SqlServer: User Id = sa; Pwd = Senha
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualiza um filme, seu Id passa pelo corpo
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualiza um filme, seu Id passa pela Url
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um filme por seu Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastra um novo filme
            </summary>
            <param name="novoFilme"> Novo filme a ser adicionado </param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.Deletar(System.Int32)">
            <summary>
            Deleta um filme existente
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.ListarTodos">
            <summary>
            Lista todos os filmes já cadastrados
            </summary>
            <returns></returns>
        </member>
        <member name="T:webapi.filmes.tarde.Repositories.GeneroRepository">
            <summary>
            Classe esponsável pelo repositório dos gêneros
            </summary>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.GeneroRepository.StringConexão">
            <summary>
            String de conexão com o banco de dados que recebe os seguintes parâmetros:
            Data Source: Nome do servidor do banco
            Initial Catalog: Nome do banco de dados
            Autenticação
                - Windows: Integrated Security = True
                - SqlServer: User Id = sa; Pwd = Senha
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um gênero passando o seu Id pelo corpo da requisição
            </summary>
            <param name="genero"> Objeto que será atualizado </param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um gênero passando o seu Id pela url da requisição
            </summary>
            <param name="id"> Id a ser procurado </param>
            <param name="genero"> Gênero que terá sessões a serem alteradas </param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um objeto gênero através de seu Id
            </summary>
            <param name="id"> Id do gênero a ser buscado </param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo gênero
            </summary>
            <param name="novoGenero"> Objeto com as infomações que serão cadastradas </param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Deletar(System.Int32)">
            <summary>
            Deleta um gênero
            </summary>
            <param name="id"> Deleta o gênero pelo seu Id </param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.ListarTodos">
            <summary>
            Listar todos os objetos do tipo gênero
            </summary>
            <returns> Lista de objetos do tipo gênero </returns>
        </member>
        <member name="T:webapi.filmes.tarde.Repositories.UsuarioRepository">
            <summary>
            Classe responsável pelo repositório dos usuários
            </summary>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.UsuarioRepository.stringConection">
            <summary>
            String de conexão para acessar o BD
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.UsuarioRepository.Login(System.String,System.String)">
            <summary>
            Loga um usuário atavés de seu email e senha 
            </summary>
            <param name="email"> Email do usuário </param>
            <param name="senha"> Senha do usuário </param>
            <returns> Um usuário já cadastrado </returns>
        </member>
    </members>
</doc>
